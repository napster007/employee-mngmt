{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Documents\\\\ReactJS Course\\\\employee-mngmt\\\\src\\\\components\\\\employeeList.js\";\n\n/* import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../service/employees.service\";\r\n\r\nexport default class AddEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    let data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      published: false\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(() => {\r\n        console.log(\"Created new item successfully!\");\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() { \r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n   }\r\n}\r\n */\nimport React, { Component } from 'react';\nimport DataGrid from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport app from '../firebase.js';\nconst columns = [{\n  id: 'fname',\n  label: 'First Name',\n  minWidth: 170\n}, {\n  id: 'mname',\n  label: 'Middle Name',\n  minWidth: 100\n}, {\n  id: 'lname',\n  label: 'Last Name',\n  minWidth: 100\n}, {\n  id: 'email',\n  label: 'Email',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'cnum',\n  label: 'Contact#',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}];\n\nfunction createData(fname, mname, lname, email, cpnum) {\n  return {\n    fname,\n    mname,\n    lname,\n    email,\n    cpnum\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nvar page = React.useState(0);\nvar setPage = React.useState(0);\nconst [rowsPerPage, setRowsPerPage] = React.useState(10);\n\nclass EmployeeList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fname: '',\n      lname: '',\n      users: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    const UsersRef = app.database().ref('users');\n    UsersRef.on('value', snapshot => {\n      let users = snapshot.val();\n      let newState = [];\n\n      for (let userId in users) {\n        newState.push({\n          id: userId,\n          fname: users[userId].fname,\n          lname: users[userId].lname\n        });\n      }\n\n      this.setState({\n        users: newState\n      });\n    });\n  }\n\n  removeItem(userId) {\n    const itemRef = app.database().ref(`/users/${userId}`);\n    itemRef.remove();\n  }\n\n  handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Fun Food Friends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"display-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.state.users.map(users => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"LastName: \", users.lname]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"brought by: \", users.fname, /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => this.removeItem(users.id),\n                      children: \"Remove Item\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this)]\n                }, users.fname, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n              className: useStyles.container,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                \"aria-label\": \"sticky table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: column.align,\n                      style: {\n                        minWidth: column.minWidth\n                      },\n                      children: column.label\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      role: \"checkbox\",\n                      tabIndex: -1,\n                      children: columns.map(column => {\n                        const value = row[column.id];\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: column.align,\n                          children: column.format && typeof value === 'number' ? column.format(value) : value\n                        }, column.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 295,\n                          columnNumber: 33\n                        }, this);\n                      })\n                    }, row.code, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 291,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default EmployeeList;","map":{"version":3,"sources":["C:/Users/Administrator/Documents/ReactJS Course/employee-mngmt/src/components/employeeList.js"],"names":["React","Component","DataGrid","makeStyles","TextField","Divider","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","app","columns","id","label","minWidth","align","format","value","toLocaleString","createData","fname","mname","lname","email","cpnum","rows","useStyles","theme","root","margin","spacing","width","page","useState","setPage","rowsPerPage","setRowsPerPage","EmployeeList","constructor","state","users","handleChange","bind","e","setState","target","name","componentDidMount","UsersRef","database","ref","on","snapshot","val","newState","userId","push","removeItem","itemRef","remove","handleChangePage","event","newPage","handleChangeRowsPerPage","render","map","container","column","slice","row","code"],"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","sourcesContent":["/* import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../service/employees.service\";\r\n\r\nexport default class AddEmployee extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    let data = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n      published: false\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(() => {\r\n        console.log(\"Created new item successfully!\");\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      published: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() { \r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.title}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n\r\n   }\r\n}\r\n */\r\n\r\n \r\nimport React, { Component }  from 'react';\r\n\r\nimport DataGrid from '@material-ui/data-grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport app from '../firebase.js'; \r\n\r\nconst columns = [\r\n  { id: 'fname', label: 'First Name', minWidth: 170 },\r\n  { id: 'mname', label: 'Middle Name', minWidth: 100 },\r\n  { id: 'lname', label: 'Last Name', minWidth: 100 },\r\n  {\r\n    id: 'email',\r\n    label: 'Email',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'cnum',\r\n    label: 'Contact#',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  }\r\n];\r\n\r\nfunction createData(fname, mname, lname, email, cpnum) {\r\n \r\n  return { fname, mname, lname, email, cpnum };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nvar page = React.useState(0);\r\n  var setPage = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n\r\nclass EmployeeList extends Component {\r\n \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      fname: '',\r\n      lname: '',\r\n      users: []\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    \r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    const UsersRef = app.database().ref('users');\r\n    UsersRef.on('value', (snapshot) => {\r\n      let users = snapshot.val();\r\n      let newState = [];\r\n      for (let userId in users) {\r\n        newState.push({\r\n          id: userId,\r\n          fname: users[userId].fname,\r\n          lname: users[userId].lname\r\n        });\r\n      }\r\n      this.setState({\r\n        users: newState\r\n      });\r\n    });\r\n  };\r\n\r\n  removeItem(userId) {\r\n    const itemRef = app.database().ref(`/users/${userId}`);\r\n    itemRef.remove();\r\n  }\r\n\r\n  \r\n\r\n  handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  };\r\n\r\n  handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n \r\n  render() {\r\n    \r\n    return (\r\n      <div className='app'>\r\n        <header>\r\n            <div className='wrapper'>\r\n              <h1>Fun Food Friends</h1>\r\n              \r\n            </div>\r\n        </header>\r\n        <div className='container'>\r\n      \r\n          <section className='display-item'>\r\n              <div className=\"wrapper\">\r\n                <ul>\r\n                  {this.state.users.map((users) => {\r\n                    return (\r\n                      <li key={users.fname}>\r\n                        <h3>LastName: {users.lname}</h3>\r\n                        <p>brought by: {users.fname}\r\n                          <button onClick={() => this.removeItem(users.id)}>Remove Item</button>\r\n                        </p>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n\r\n                <TableContainer className={useStyles.container}>\r\n                  <Table stickyHeader aria-label=\"sticky table\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {columns.map((column) => (\r\n                        <TableCell\r\n                          key={column.id}\r\n                          align={column.align}\r\n                          style={{ minWidth: column.minWidth }}\r\n                        >\r\n                          {column.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                    <TableBody>\r\n                      {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                        return (\r\n                          <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                            {columns.map((column) => {\r\n                              const value = row[column.id];\r\n                              return (\r\n                                <TableCell key={column.id} align={column.align}>\r\n                                  {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                </TableCell>\r\n                              );\r\n                            })}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EmployeeList;"]},"metadata":{},"sourceType":"module"}